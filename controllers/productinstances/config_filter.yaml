# id (IdField) field !canFilter
# product (ForeignIdField) field !canFilter
# quantity (Field) field !canFilter
# external_identifier (Field) field !canFilter
# asset_class (Field) field !canFilter
# image (Field) field !canFilter
# server (ForeignIdField) field !canFilter
scopes:
  created_at_event:
    # created_at_event
    label: acorn.lojistiks::lang.models.general.created_at_event
    type: daterange
    conditions: "((select aacep.start from acorn_calendar_event_part aacep where aacep.event_id = created_at_event_id order by start limit 1) between ':after' and ':before')"
    modelClass: Acorn\Calendar\Models\Event
    # Relation =[Xto1]> acorn_calendar_event(id) (created_at)
  created_by_user:
    # created_by_user
    label: acorn.lojistiks::lang.models.general.created_by_user
    nameFrom: fully_qualified_name
    modelClass: Acorn\User\Models\User
    # Relation =[Xto1]> acorn_user_users(id) (created_by)
  lojistiks_product_instance_transfer_product_instances:
    # lojistiks_product_instance_transfer_product_instances
    label: acorn.lojistiks::lang.models.productinstancetransfer.label_plural
    conditions: id in(select acorn_lojistiks_product_instance_transfer.product_instance_id from acorn_lojistiks_product_instance_transfer where acorn_lojistiks_product_instance_transfer.transfer_id in(:filtered))
    nameFrom: fully_qualified_name
    modelClass: Acorn\Lojistiks\Models\Transfer
    # Relation <[XtoXSemi]= acorn_lojistiks_product_instance_transfer(product_instance_id) through semi [acorn_lojistiks_product_instance_transfer]
# response (Field) field !canFilter
# _qrcode (PseudoField) field !canFilter
# _actions (PseudoField) field !canFilter
