# id (IdField) field !canFilter
# name (Field) field !canFilter
# measurement_unit (ForeignIdField) field !canFilter
# brand (ForeignIdField) field !canFilter
# model_name (Field) field !canFilter
# server (ForeignIdField) field !canFilter
scopes:
  created_at_event:
    # created_at_event
    label: acorn.lojistiks::lang.models.general.created_at_event
    type: daterange
    conditions: "((select aacep.start from acorn_calendar_event_parts aacep where aacep.event_id = created_at_event_id order by start limit 1) between ':after' and ':before')"
    modelClass: Acorn\Calendar\Models\Event
    # Relation =[Xto1]> acorn_calendar_events(id) (created_at)
  created_by_user:
    # created_by_user
    label: acorn.lojistiks::lang.models.general.created_by_user
    nameFrom: fully_qualified_name
    modelClass: Acorn\User\Models\User
    # Relation =[Xto1]> acorn_user_users(id) (created_by)
  updated_at_event:
    # updated_at_event
    label: acorn.lojistiks::lang.models.general.updated_at_event
    type: daterange
    conditions: "((select aacep.start from acorn_calendar_event_parts aacep where aacep.event_id = updated_at_event_id order by start limit 1) between ':after' and ':before')"
    modelClass: Acorn\Calendar\Models\Event
    # Relation =[Xto1]> acorn_calendar_events(id) (updated_at)
  updated_by_user:
    # updated_by_user
    label: acorn.lojistiks::lang.models.general.updated_by_user
    nameFrom: fully_qualified_name
    modelClass: Acorn\User\Models\User
    # Relation =[Xto1]> acorn_user_users(id) (updated_by)
  lojistiks_products_product_category_products:
    # lojistiks_products_product_category_products
    label: acorn.lojistiks::lang.models.productsproductcategory.label_plural
    conditions: id in(select acorn_lojistiks_products_product_category.product_id from acorn_lojistiks_products_product_category where acorn_lojistiks_products_product_category.product_category_id in(:filtered))
    nameFrom: fully_qualified_name
    modelClass: Acorn\Lojistiks\Models\ProductCategory
    # Relation <[XtoXSemi]= acorn_lojistiks_products_product_category(product_id) through semi [acorn_lojistiks_products_product_category]
  lojistiks_product_product_category_products:
    # lojistiks_product_product_category_products
    label: acorn.lojistiks::lang.models.productproductcategory.label_plural
    conditions: id in(select acorn_lojistiks_product_product_category.product_id from acorn_lojistiks_product_product_category where acorn_lojistiks_product_product_category.product_category_id in(:filtered))
    nameFrom: fully_qualified_name
    modelClass: Acorn\Lojistiks\Models\ProductCategory
    # Relation <[XtoXSemi]= acorn_lojistiks_product_product_category(product_id) through semi [acorn_lojistiks_product_product_category]
# response (Field) field !canFilter
# image (Field) field !canFilter
# description (Field) field !canFilter
# lojistiks_product_instances_product (PseudoFromForeignIdField) field !canFilter
# lojistiks_product_products_product (PseudoFromForeignIdField) field !canFilter
# lojistiks_product_attributes_product (PseudoFromForeignIdField) field !canFilter
# lojistiks_product_products_sub_product (PseudoFromForeignIdField) field !canFilter
# _qrcode (PseudoField) field !canFilter
# _actions (PseudoField) field !canFilter
